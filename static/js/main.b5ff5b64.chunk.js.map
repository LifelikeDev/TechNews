{"version":3,"sources":["actions.js","reducer.js","context.js","SearchForm.js","Stories.js","Buttons.js","Navbar.js","App.js","index.js"],"names":["SET_LOADING","SET_STORIES","HIDE_STORY","SWITCH_PAGE","SEARCH_STORY","FETCH_FAILED","reducer","state","action","type","isLoading","hits","payload","nbPages","cannotFetch","filter","story","objectID","query","page","nextPage","prevPage","Error","initialState","AppContext","React","createContext","AppProvider","children","useReducer","dispatch","getStories","url","a","fetch","response","json","newsData","console","log","useEffect","Provider","value","hideStory","id","searchStory","pageSwitch","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","onChange","target","placeholder","Stories","convertTimestamp","stamp","date","Date","getDate","getMonth","getFullYear","map","author","created_at_i","title","num_comments","href","rel","onClick","Buttons","disabled","Navbar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5ff5b64.chunk.js","sourcesContent":["const SET_LOADING = \"SET_LOADING\";\nconst SET_STORIES = \"SET_STORIES\";\nconst HIDE_STORY = \"HIDE_STORY\";\nconst SWITCH_PAGE = \"HANDLE_PAGE\";\nconst SEARCH_STORY = \"SEARCH_STORY\";\nconst FETCH_FAILED = \"FETCH_FAILED\";\n\nexport {\n  SET_LOADING,\n  SET_STORIES,\n  HIDE_STORY,\n  SWITCH_PAGE,\n  SEARCH_STORY,\n  FETCH_FAILED,\n};\n","import {\r\n  SET_LOADING,\r\n  SET_STORIES,\r\n  HIDE_STORY,\r\n  SWITCH_PAGE,\r\n  SEARCH_STORY,\r\n  FETCH_FAILED,\r\n} from \"./actions\";\r\n\r\n// check for various action types and respond accordingly\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return { ...state, isLoading: true };\r\n    case SET_STORIES:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        hits: action.payload.hits,\r\n        nbPages: action.payload.nbPages,\r\n      };\r\n    case FETCH_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        cannotFetch: true,\r\n      };\r\n    case HIDE_STORY:\r\n      return {\r\n        ...state,\r\n        hits: state.hits.filter((story) => story.objectID !== action.payload),\r\n      };\r\n    case SEARCH_STORY:\r\n      return {\r\n        ...state,\r\n        query: action.payload,\r\n        page: 0,\r\n      };\r\n    case SWITCH_PAGE:\r\n      if (action.payload === \"increase\") {\r\n        let nextPage = state.page + 1;\r\n        //   set page number to 1 upon reaching page end limit\r\n        if (nextPage > state.nbPages - 1) {\r\n          nextPage = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          page: nextPage,\r\n        };\r\n      }\r\n      if (action.payload === \"decrease\") {\r\n        let prevPage = state.page - 1;\r\n        //   set page number to last page upon reaching page start limit\r\n        if (prevPage < 0) {\r\n          prevPage = state.nbPages - 1;\r\n        }\r\n        return {\r\n          ...state,\r\n          page: prevPage,\r\n        };\r\n      }\r\n      break;\r\n    default:\r\n      throw new Error(`no matching \"${action.type}\" action type`);\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useEffect, useContext, useReducer } from \"react\";\r\nimport reducer from \"./reducer\";\r\nimport {\r\n  SET_LOADING,\r\n  SET_STORIES,\r\n  HIDE_STORY,\r\n  SWITCH_PAGE,\r\n  SEARCH_STORY,\r\n  FETCH_FAILED,\r\n} from \"./actions\";\r\n\r\nconst API_URL = \"https://hn.algolia.com/api/v1/search?\";\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  cannotFetch: false,\r\n  hits: [],\r\n  query: \"\",\r\n  page: 0,\r\n  nbPages: 0,\r\n};\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //   fetch news data\r\n  const getStories = async (url) => {\r\n    dispatch({ type: SET_LOADING });\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const newsData = await response.json();\r\n      dispatch({\r\n        type: SET_STORIES,\r\n        payload: { hits: newsData.hits, nbPages: newsData.nbPages },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({ type: FETCH_FAILED });\r\n    }\r\n  };\r\n\r\n  // hide stories\r\n  const hideStory = (id) => {\r\n    dispatch({ type: HIDE_STORY, payload: id });\r\n  };\r\n\r\n  //   search for story based on query\r\n  const searchStory = (query) => {\r\n    dispatch({ type: SEARCH_STORY, payload: query });\r\n  };\r\n\r\n  // switch pages with buttons\r\n  const pageSwitch = (value) => {\r\n    dispatch({ type: SWITCH_PAGE, payload: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStories(`${API_URL}query=${state.query}&page=${state.page}`);\r\n  }, [state.query, state.page]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ ...state, hideStory, searchStory, pageSwitch }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\n// init custom hook useGlobalContext\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider };\r\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst SearchForm = () => {\n  const { query, searchStory } = useGlobalContext();\n  return (\n    <form className=\"search-form\" onSubmit={(e) => e.preventDefault()}>\n      <h2>Search</h2>\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        value={query}\n        onChange={(e) => searchStory(e.target.value)}\n        placeholder=\"enter a topic here...\"\n      />\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Stories = () => {\n  const { isLoading, hits, hideStory, cannotFetch } = useGlobalContext();\n\n  const convertTimestamp = (stamp) => {\n    let timestamp = stamp * 1000; // converting from millisecond(default) to unix(second)\n    const date = new Date(timestamp);\n\n    return (\n      \"Date: \" +\n      date.getDate() +\n      \"/\" +\n      (date.getMonth() + 1) +\n      \"/\" +\n      date.getFullYear()\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <section className=\"loading-box\">\n        <div className=\"loading\"></div>\n        <h4>Fetching content...</h4>\n      </section>\n    );\n  }\n\n  if (cannotFetch) {\n    return (\n      <section className=\"error-box\">\n        <h2>Failed to fetch content</h2>\n        <p>Check your network settings and refresh your browser</p>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"stories-box\">\n      {hits.map((story) => {\n        const {\n          author,\n          created_at_i,\n          title,\n          objectID,\n          num_comments,\n          url,\n        } = story;\n        return (\n          <article className=\"single-story\" key={objectID}>\n            <h1 className=\"story-headline\">\n              {title || \"Story headline unavailable\"}\n            </h1>\n            <div className=\"story-info\">\n              <p className=\"story-details\">\n                Author: <span className=\"author-name\">{author}</span> |{\"  \"}\n                {convertTimestamp(`${created_at_i}`)} |{\" \"}\n                <span>{num_comments} comments</span>\n              </p>\n              <p className=\"story-cta\">\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Read More\n                </a>\n                <button\n                  className=\"hide-btn\"\n                  onClick={() => hideStory(objectID)}\n                >\n                  Hide\n                </button>\n              </p>\n            </div>\n          </article>\n        );\n      })}\n    </section>\n  );\n};\n\nexport default Stories;\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Buttons = () => {\n  const { isLoading, pageSwitch, page, nbPages } = useGlobalContext();\n\n  return (\n    <div className=\"buttons-box\">\n      <button\n        className=\"switch-btn\"\n        disabled={isLoading}\n        onClick={() => pageSwitch(\"decrease\")}\n      >\n        Prev Page\n      </button>\n      <p className=\"page-number\">\n        {page + 1} of {nbPages}\n      </p>\n      <button\n        className=\"switch-btn\"\n        disabled={isLoading}\n        onClick={() => pageSwitch(\"increase\")}\n      >\n        Next Page\n      </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <nav>\r\n        <h2>TechNews</h2>\r\n        <p>...wholesome, accurate &amp; reliable</p>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport Stories from \"./Stories\";\nimport Buttons from \"./Buttons\";\nimport Navbar from \"./Navbar\";\nimport { useGlobalContext } from \"./context\";\n\nconst App = () => {\n  const { isLoading } = useGlobalContext();\n  return (\n    <div className=\"main-wrapper\">\n      <Navbar />\n      <main className=\"wrapper\">\n        <SearchForm />\n        <Stories />\n        {!isLoading && <Buttons />}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}